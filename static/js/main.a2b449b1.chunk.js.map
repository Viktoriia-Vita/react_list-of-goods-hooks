{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","None","sortType","setSortType","isReversed","setIsReversed","sortedGoods","goods","query","prepGoods","Alphabet","sort","a","b","localeCompare","Lenghth","length","reverse","sortByType","className","type","cn","onClick","hasState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,E,SAAAA,M,KA6BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAAoBC,EAAgBC,EAAcJ,GAChD,IAAMK,EAAS,YAAOF,GAEtB,GAAIC,EACF,OAAQA,GACN,KAAKX,EAASa,SACZD,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACzC,MACF,KAAKhB,EAASkB,QACZN,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAW5C,OAJIZ,GACFK,EAAUQ,UAGLR,EAMaS,CAAWpB,EAAiBI,EAAUE,GAmB1D,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYnB,IAAaL,EAASa,WACtCY,QAxBe,WACrBnB,EAAYN,EAASa,WAmBjB,iCASA,wBACEU,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYnB,IAAaL,EAASkB,UACtCO,QA7Ba,WACnBnB,EAAYN,EAASkB,UAwBjB,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,YAAajB,IACrDkB,QAjCS,WACfjB,GAAc,SAAAkB,GAAQ,OAAKA,MA6BvB,sBAQErB,GAAYE,IAEV,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAvCE,WACZnB,EAAYN,EAASI,MACrBI,GAAc,IAkCN,sBAULC,EAAYkB,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,UC5GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a2b449b1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Lenghth = 'length',\n  None = '',\n}\n\nfunction sortByType(goods:string[], query:string, isReversed:boolean) {\n  const prepGoods = [...goods];\n\n  if (query) {\n    switch (query) {\n      case SortType.Alphabet:\n        prepGoods.sort((a, b) => a.localeCompare(b));\n        break;\n      case SortType.Lenghth:\n        prepGoods.sort((a, b) => a.length - b.length);\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (isReversed) {\n    prepGoods.reverse();\n  }\n\n  return prepGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.None);\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods = sortByType(goodsFromServer, sortType, isReversed);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.Alphabet);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.Lenghth);\n  };\n\n  const reversed = () => {\n    setIsReversed(hasState => !hasState);\n  };\n\n  const reset = () => {\n    setSortType(SortType.None);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortType !== SortType.Alphabet })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortType !== SortType.Lenghth })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n          onClick={reversed}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      {sortedGoods.map(good => (\n        <li key={good} data-cy=\"Good\">{good}</li>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}